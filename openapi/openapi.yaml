openapi: 3.0.2

info:
  version: 1.0.0
  title:       Schoolbox API
  description: |
    This document describes the API endpoints that are available to a Schoolbox
    instance.
  x-api-id:    0609d493-8804-4e97-b5ac-0ed7b3c99db8
  x-audience:  external-partner
  contact:
    name:  Schoolbox Team
    url:   https://schoolbox.com.au
    email: developers@schoolbox.com.au
  x-logo:
    url: './logo.png'

tags:
  - name: user
    x-displayName: Users (under development)
    description: |
      Create and manage users.

  - name: discussion
    x-displayName: Discussions
    description: |
      Create and manage discussion threads and comments.

servers:
  - url: https://{hostname}.{domain}/
    variables:
      hostname:
        description: The subdomain of the school's domain name on which Schoolbox is hosted.
        default: demo
      domain:
        description: The school's domain name.
        default: schoolbox.com.au

paths:

  /user:
    $ref: 'paths/user.yaml'

  /user/token:
    get:
      operationId: userGetTokenForSelf
      tags: [user]
      summary: Get an authentication token for the current user
      description: |
        Retrieve an authentication token for the user identified by the session
        cookie.

        This endpoint is intended so that in-browser API calls performed within
        a Schoolbox instance may be performed in a manner more in common with
        calls to a remote API.
      security:
        - session: []
      responses:
        '200':
          description: A user token
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string
                    description: |
                      A JSON Web Token (JWT) that may be used to perform API
                      calls as the user identified by the session cookie.

                      This is the "BearerAuth" security scheme.
#        default:
#          $ref: ../components/responses/problem.yaml
#    $ref: 'paths/user@token.yaml'

  /user/token/{id}:
    get:
      operationId: userGetTokenForUser
      tags: [user]
      summary: Get an authentication token for another user
      description: |
        Retrieve an authentication token for another user.
      security:
        - session: []
      responses:
        '200':
          description: A user token
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string
                    description: |
                      A JSON Web Token (JWT) that may be used to perform API
                      calls as the user identified by the session cookie.

                      This is the "BearerAuth" security scheme.
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer

  /user/{id}:
    $ref: 'paths/user@{id}.yaml'

  /user/{id}/groupMembership:
    $ref: 'paths/user@{id}@groupMembership.yaml'

  /user/{id}/groupMembership/{groupId}:
    $ref: 'paths/user@{id}@groupMembership@{groupId}.yaml'

  /discussion/{contextType}/{contextId}/comments/{id}:
    $ref: 'paths/discussion@{contextType}@{contextId}@comments@{id}.yaml'

  /discussion/{contextType}/{contextId}/comments/{id}/comments:
    $ref: 'paths/discussion@{contextType}@{contextId}@comments@{id}@comments.yaml'

  /discussion/{contextType}/{contextId}/threads/{id}:
    $ref: 'paths/discussion@{contextType}@{contextId}@threads@{id}.yaml'

  /discussion/{contextType}/{contextId}/threads:
    $ref: 'paths/discussion@{contextType}@{contextId}@threads.yaml'

  /discussion/{contextType}/{contextId}/threads/{id}/comments:
    $ref: 'paths/discussion@{contextType}@{contextId}@threads@{id}@comments.yaml'

  /discussion/{contextType}/{contextId}/threads/{id}/open:
    $ref: 'paths/discussion@{contextType}@{contextId}@threads@{id}@open.yaml'

  /discussion/{contextType}/{contextId}/threads/{id}/close:
    $ref: 'paths/discussion@{contextType}@{contextId}@threads@{id}@close.yaml'

security:
  # Authorization is handled by Schoolbox itself once a user is authenticated:
  # therefore, no scopes are defined for any security scheme.
  - session: []
  - bearerAuth: []

components:
  securitySchemes:
    session:
      $ref: components/securitySchemes/session.yaml
    bearerAuth:
      $ref: components/securitySchemes/bearerAuth.yaml
